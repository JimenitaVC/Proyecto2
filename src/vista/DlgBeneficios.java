package vista;

import datos.AlmacenamientoBeneficios;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Beneficios;

/**
 *
 * @author monse
 */
public class DlgBeneficios extends javax.swing.JDialog {

    private ResultSet TablaBD;
    private DefaultTableModel TablaJT;
    private AlmacenamientoBeneficios almacenamientoBeneficios;
    private boolean modoEdicion = false;
    private int idBeneficioOriginal = -1;

    /**
     * Creates new form DlgEstudiante
     */
    public DlgBeneficios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        almacenamientoBeneficios = AlmacenamientoBeneficios.getInstance();
        TablaJT = (DefaultTableModel) JtBeneficios.getModel();
        actualizarTabla();
        txtId_Beneficio.setText(String.valueOf(almacenamientoBeneficios.obtenerSiguienteId()));
        configurarListenerTabla();
        habilitarBotones(true, false);
    }

    private void actualizarTabla() {
        mostrarEnTabla(almacenamientoBeneficios.obtenerTodos());
    }

    private void mostrarEnTabla(ArrayList<Beneficios> lista) {
        TablaJT.setRowCount(0);
        for (Beneficios b : lista) {
            TablaJT.addRow(new Object[]{b.getIdBeneficio(), b.getNomBeneficio(), b.getDescripcion(), b.getMontoBeneficio()});
        }
    }

    private void limpiarCampos() {
        cmNombre_Beneficio.setSelectedIndex(0);
        txtDescripcion.setText("");
        cmbMonto.setSelectedIndex(0);
    }

    private void configurarListenerTabla() {
        JtBeneficios.getSelectionModel().addListSelectionListener(e -> {
            int fila = JtBeneficios.getSelectedRow();
            if (fila != -1) {
                idBeneficioOriginal = (int) TablaJT.getValueAt(fila, 0);
                txtId_Beneficio.setText(String.valueOf(idBeneficioOriginal));
                cmNombre_Beneficio.setSelectedItem(String.valueOf(TablaJT.getValueAt(fila, 1)));
                txtDescripcion.setText(TablaJT.getValueAt(fila, 2).toString());
                cmbMonto.setSelectedItem(String.valueOf(TablaJT.getValueAt(fila, 3)));
                habilitarBotones(false, true);
            }
        });
    }

    private void habilitarBotones(boolean insertar, boolean actualizarEliminar) {
        btnInsertar.setEnabled(insertar);
        btnActualizar.setEnabled(actualizarEliminar);
        txtId_Beneficio.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        JtBeneficios = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblBuscar2 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        lblCarnet = new javax.swing.JLabel();
        lblFechaIngreso2 = new javax.swing.JLabel();
        lblMonto = new javax.swing.JLabel();
        cmNombre_Beneficio = new javax.swing.JComboBox<>();
        txtId_Beneficio = new javax.swing.JTextField();
        lblFechaIngreso3 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        cmbMonto = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JtBeneficios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_Beneficio", "Nombre_B", "Descripcion", "Monto"
            }
        ));
        jScrollPane2.setViewportView(JtBeneficios);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBuscar2.setText("Buscar:");

        btnInsertar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/insertar.png"))); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });

        lblCarnet.setText("Id_Beneficio");

        lblFechaIngreso2.setText("Nombre_B");

        lblMonto.setText("Monto");

        cmNombre_Beneficio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beca 1 + Alimentacion", "Beca 2 + Transporte", "Beca 3 + Alimentacion + Transporte", "Beca 4 + Ayuda Economica", "Beca 5 + Alquiler", "Todas las ayudas" }));
        cmNombre_Beneficio.setToolTipText("");
        cmNombre_Beneficio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmNombre_BeneficioActionPerformed(evt);
            }
        });

        lblFechaIngreso3.setText("Descripcion");

        cmbMonto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "27000", "35000", "40000", "86000", "100000", "133000", "156000", " ", " " }));
        cmbMonto.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCarnet)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(lblFechaIngreso3)
                                    .addGap(26, 26, 26)
                                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblFechaIngreso2)
                                        .addComponent(lblMonto))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cmNombre_Beneficio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtId_Beneficio, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addGap(32, 32, 32)
                                            .addComponent(cmbMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE)))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnInsertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBuscar2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblCarnet))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtId_Beneficio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaIngreso2)
                    .addComponent(cmNombre_Beneficio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaIngreso3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMonto)
                    .addComponent(cmbMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBuscar2))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
        try {
            // Validaciones
            if (txtId_Beneficio.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "El ID no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cmNombre_Beneficio.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un nombre de beneficio", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtDescripcion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cmbMonto.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un monto", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int id = Integer.parseInt(txtId_Beneficio.getText());
            String nombre = cmNombre_Beneficio.getSelectedItem().toString();
            String descripcion = txtDescripcion.getText();
            double monto = Double.parseDouble(cmbMonto.getSelectedItem().toString());

            Beneficios beneficio = new Beneficios(id, nombre, descripcion, monto);

            if (almacenamientoBeneficios.insertar(beneficio)) {
                JOptionPane.showMessageDialog(this, "Beneficio insertado con éxito");
                actualizarTabla();
                limpiarCampos();
                txtId_Beneficio.setText(String.valueOf(almacenamientoBeneficios.obtenerSiguienteId()));
            } else {
                JOptionPane.showMessageDialog(this, "El beneficio ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID o monto no son válidos", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al insertar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try {
            if (idBeneficioOriginal == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un beneficio de la tabla para actualizar", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cmNombre_Beneficio.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un nombre de beneficio", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (txtDescripcion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cmbMonto.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un monto", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String nombre = cmNombre_Beneficio.getSelectedItem().toString();
            String descripcion = txtDescripcion.getText();
            double monto = Double.parseDouble(cmbMonto.getSelectedItem().toString());

            Beneficios beneficioMod = new Beneficios(idBeneficioOriginal, nombre, descripcion, monto);

            if (almacenamientoBeneficios.modificar(idBeneficioOriginal, beneficioMod)) {
                JOptionPane.showMessageDialog(this, "Beneficio actualizado con éxito");
                actualizarTabla();
                limpiarCampos();
                txtId_Beneficio.setText(String.valueOf(almacenamientoBeneficios.obtenerSiguienteId()));
                habilitarBotones(true, false);
                idBeneficioOriginal = -1;
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo actualizar", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Monto no es válido", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            int fila = JtBeneficios.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un beneficio de la tabla para eliminar");
                return;
            }

            int id = (int) TablaJT.getValueAt(fila, 0);

            int confirm = JOptionPane.showConfirmDialog(this, "¿Seguro que desea eliminar el beneficio?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (almacenamientoBeneficios.eliminar(id)) {
                    JOptionPane.showMessageDialog(this, "Beneficio eliminado con éxito");
                    actualizarTabla();
                    limpiarCampos();
                    txtId_Beneficio.setText(String.valueOf(almacenamientoBeneficios.obtenerSiguienteId()));
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        String datoBusqueda = txtBusqueda.getText().trim();

        try {
            TablaJT.setRowCount(0);
            ArrayList<Beneficios> resultadosBusqueda = new ArrayList<>();

            if (datoBusqueda.isEmpty()) {
                resultadosBusqueda = almacenamientoBeneficios.obtenerTodos();
            } else {
                boolean busquedaPorIdExitosa = false;
                try {
                    int idBusqueda = Integer.parseInt(datoBusqueda);
                    Beneficios beneficioPorId = almacenamientoBeneficios.buscarPorId(idBusqueda);
                    if (beneficioPorId != null) {
                        resultadosBusqueda.add(beneficioPorId);
                        busquedaPorIdExitosa = true;
                    }
                } catch (NumberFormatException e) {
                }
                if (!busquedaPorIdExitosa) {
                    ArrayList<Beneficios> beneficiosPorNombre = almacenamientoBeneficios.buscarPorNombre(datoBusqueda);
                    resultadosBusqueda.addAll(beneficiosPorNombre);
                }
            }
            for (Beneficios b : resultadosBusqueda) {
                Object[] fila = {
                    b.getIdBeneficio(),
                    b.getNomBeneficio(),
                    b.getDescripcion(),
                    b.getMontoBeneficio()
                };
                TablaJT.addRow(fila);
            }

            JtBeneficios.revalidate();
            JtBeneficios.repaint();

        } catch (Exception ex) {
            System.out.println("Error al realizar la búsqueda: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void cmNombre_BeneficioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmNombre_BeneficioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmNombre_BeneficioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgBeneficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgBeneficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgBeneficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgBeneficios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgBeneficios dialog = new DlgBeneficios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JtBeneficios;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JComboBox<String> cmNombre_Beneficio;
    private javax.swing.JComboBox<String> cmbMonto;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBuscar2;
    private javax.swing.JLabel lblCarnet;
    private javax.swing.JLabel lblFechaIngreso2;
    private javax.swing.JLabel lblFechaIngreso3;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtId_Beneficio;
    // End of variables declaration//GEN-END:variables
}
